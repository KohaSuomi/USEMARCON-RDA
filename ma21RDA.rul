RDA-konversio
versio 18.11.2015 / Kansalliskirjasto (TV)

#define version 317

#define macro 300AE | RegReplace('n\\. ', 'noin'); \
                      RegReplace('ss\\.', 'sivut'); \
                      RegReplace('s\\,', 'sivua,'); \
                      RegReplace('kuv\\.', 'kuvitettu'); \
                      RegReplace('verkkojulkaisu', 'verkkoaineisto'); \
                      RegReplace('1 vol\\.', '1 nide'); \
                      RegReplace('(\\d*) (S\\.)', '\\1 sivua'); \
                      RegReplace('(\\d*) S', '\\1 sivua'); \
                      RegReplace('(\\d*) (min)([^A-Za-z])', '\\1 minuuttia\\3', 'g'); \
                      RegReplace('(\\d*) (min[^a-zA-Z])(\\d*) (s)', '\\1 minuuttia \\3 sekuntia'); \
                      If (RegFind(S, '[023456789] vol\\.') >= 0) RegReplace('vol\\.', 'nidettä'); \
                      If (RegFind(S, '\\d* s\\.') >= 0) RegReplace('s\\.', 'sivua'); \
                      If (RegFind(S, 'S\\.(.)*\\d*-\\d*') >= 0) RegReplace('S\\.', 'sivut')

#define macro 300BE | RegReplace('kartt\\.', 'karttoja'); \
                      RegReplace('kuv\\.', 'kuvitettu'); \
                      RegReplace('mv\\.', 'mustavalkoinen'); \
                      RegReplace('vär\\.', 'värillinen'); \
                      RegReplace('värikuv\\.', 'värikuvitus'); \
                      RegReplace('([^A-Za-zÄÖÅäöå^])(ääni)([^A-Za-zÄÖÅäöå])', '\\1äänellinen\\3'); \
                      RegReplace('(^ääni)([^A-Za-zÄÖÅäöå])', 'äänellinen\\2'); \
                      RegReplace('([^A-Za-zÄÖÅäöå])(ääni\$)', '\\1äänellinen'); \
                      RegReplace('^ääni\$', 'äänellinen'); \
                      RegReplace('nuott\\.', 'nuotteja'); \
                      RegReplace('^ill\\.', 'illustrated'); \
                      RegReplace('illus\\.', 'illustrated'); \
                      RegReplace('diagrs\\.', 'diagrams'); \
                      RegReplace('incl\\.', 'includes'); \
                      RegReplace('tab\\.', 'tables'); \
                      RegReplace('fold\\. maps', 'folded maps'); \
                      RegReplace('(\\d*) (S)', '\\1 sivua'); \
                      RegReplace('(\\d*) irtol\\.', '\\1 irtolehteä'); \
                      RegReplace('(\\d*) kuvas\\.', '\\1 kuvasivua'); \
                      RegReplace('([^0-9]) (taul[.,])', '\\1 taulukkoja'); \
                      RegReplace('^taul\\.', 'taulukkoja'); \
                      RegReplace('hakem\\.', 'hakemisto'); \
                      RegReplace('lyh\\. luett\\.', 'lyhenneluettelo'); \
                      RegReplace('lähdel\\.', 'lähdeluettelo'); \
                      RegReplace('(\\d*) taul\\.', '\\1 taulukkoa'); \
                      RegReplace('(\\d*) karttal\\.', '\\1 karttaliitettä'); \
                      RegReplace('1 liites\\.', '1 liitesivu'); \
                      RegReplace('(\\d*)(.*)(liites\\.)', '\\2liitesivua'); \
                      If (RegFind(S, '\\d* s\\.') >= 0) RegReplace('s\\.', 'sivua'); \
                      If (RegFind(S, '\\d*-\\d*') >= 0) RegReplace('[^s]?s\\.|ss\\.', 'sivut')

// Musiikin esityskokoonpanotermien avaaminen, osakenttä $m kentissä 130, 240, 600, 610, 630, 700, 710, 730, 800, 810, 830

#define macro ESITYSKOKOONPANO | RegReplace('pianotrio', 'piano, viulu, sello'); \
                                 RegReplace('pianokvartetti', 'piano, viulu, alttoviulu, sello'); \
                                 RegReplace('pianokvintetti', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('jousiork.', 'jousiorkesteri'); \
                                 RegReplace('kamariork.', 'orkesteri'); \
                                 RegReplace('puhallinork.', 'puhallinorkesteri'); \
                                 RegReplace('(S) (\\(\\d+)', 'sopraanot \\2'); \
                                 RegReplace('(S)([^A-Za-zÄÖÅäöå]|\$)', 'sopraano\\2', 'g'); \
                                 RegReplace('(Mz) (\\(\\d+)', 'mezzosopraanot \\2'); \
                                 RegReplace('(Mz)([^A-Za-zÄÖÅäöå]|\$)', 'mezzosopraano\\2', 'g'); \
                                 RegReplace('(A) (\\(\\d+)', 'altot \\2'); \
                                 RegReplace('(A)([^A-Za-zÄÖÅäöå]|\$)', 'altto\\2', 'g'); \
                                 RegReplace('(Kt) (\\(\\d+)', 'kontratenorit \\2'); \
                                 RegReplace('(Kt)([^A-Za-zÄÖÅäöå]|\$)', 'kontratenori\\2', 'g'); \
                                 RegReplace('(T) (\\(\\d+)', 'tenorit \\2'); \
                                 RegReplace('(T)([^A-Za-zÄÖÅäöå]|\$)', 'tenori\\2', 'g'); \
                                 RegReplace('(Bar) (\\(\\d+)', 'baritonit \\2'); \
                                 RegReplace('(Bar)([^A-Za-zÄÖÅäöå]|\$)', 'baritoni\\2', 'g'); \
                                 RegReplace('(B) (\\(\\d+)', 'bassot \\2'); \
                                 RegReplace('(B)([^A-Za-zÄÖÅäöå]|\$)', 'basso\\2', 'g'); \
                                 RegReplace('kät\\.', 'kätisesti'); \
                                 RegReplace('ork\\.', 'orkesteri'); \
                                 RegReplace('soitinääni', 'määrittämätön soitin'); \
                                 If (RegFind(S, 'sovitettu, jousitrio') >= 0) Or (RegFind(S, ', jousitrio') < 0) RegReplace('jousitrio', 'viulu, alttoviulu, sello'); \
                                 If (RegFind(S, 'sovitettu, jousikvartetti') >= 0) Or (RegFind(S, ', jousikvartetti') <0) RegReplace('jousikvartetti', 'viulut (2), alttoviulu, sello'); \
                                 If (RegFind(S, 'sovitettu, jousikvintetti') >= 0) Or (RegFind(S, ', jousikvintetti') <0) RegReplace('jousikvintetti', 'viulut (2), alttoviulut (2), sello'); \
                                 If (RegFind(S, 'sovitettu, puupuhallinkvartetti') >= 0) Or (RegFind(S, ', puupuhallinkvartetti') <0) RegReplace('puupuhallinkvartetti', 'huilu, oboe, klarinetti, fagotti'); \
                                 If (RegFind(S, 'sovitettu, puhallinkvintetti') >= 0) Or (RegFind(S, ', puhallinkvintetti') <0) RegReplace('puhallinkvintetti', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro PAINOSMERKINTO   | RegReplace('rev\\.', 'revised'); \
                                 RegReplace('ed\\.', 'edition'); \
                                 RegReplace('Aufl\\.', 'Auflage'); \
                                 RegReplace('neubearb\\.', 'neubearbeite'); \
                                 RegReplace('uppl\\.', 'upplaga')
                                
#define macro TRIOT            | RegReplace('^piano, jouset', 'piano, viulu, sello'); \
                                 RegReplace('^jouset', 'viulu, alttoviulu, sello')
                                 
#define macro KVARTETOT        | RegReplace('^piano, jouset', 'piano, viulu, alttoviulu, sello');\
                                 RegReplace('^jouset', 'viulut (2), alttoviulu, sello'); \
                                 RegReplace('^puupuhaltimet', 'huilu, oboe, klarinetti, fagotti')
                              
#define macro KVINTETOT        | RegReplace('^jouset', 'viulut (2), alttoviulut (2), sello'); \
                                 RegReplace('^piano, jouset', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('^puhaltimet', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro SOVITUSMERKINTO | RegReplace('sov\\.', 'sovitettu')

#define macro RAAMATTU | RegReplace('UT', 'Uusi testamentti'); \
                         RegReplace('VT', 'Vanha testamentti')

#define macro FIKTIIVINENHAHMO | RegReplace('fikt\\.', '(fiktiivinen hahmo)'); \
                                 RegReplace('fiktiivinen henkilö', '(fiktiivinen hahmo)')

#define macro FIKTIIVINENYHTEISO | RegReplace('fikt\\.', '(fiktiivinen yhteisö)')

#define macro AIKAMAAREET | RegReplace('^s\\.', 'syntynyt'); \
                            RegReplace('^k\\.', 'kuollut'); \
                            RegReplace('n\\.', 'noin'); \
                            RegReplace('vs\\.', 'vuosisata')

#define macro SIDOSASUT |  RegReplace('sid', 'sidottu'); \
                           RegReplace('nid', 'nidottu'); \
                           RegReplace('virh', 'virheellinen'); \
                           RegReplace('inb', 'inbunden'); \
                           RegReplace('hft', 'häftad'); \
                           RegReplace('pbk', 'paperback'); \
                           RegReplace('hbk', 'hardback'); \
                           RegReplace('alk\\. paper', 'alkaline paper'); \
                           RegReplace('(verkkojulk)([^A-Za-z])', 'verkkojulkaisu\\2'); \
                           RegReplace('verkkojulk\$', 'verkkojulkaisu')
                                               
000/1-18/ | 000/1-18/ | S
000/19/ | 000/19/ | 'i'
000/20-24/ | 000/20-24/ | S

001 | <DEL   | S

003 | <DEL   | S

020I1 | 020I1 | S
020I2 | 020I2 | S
020$a | 020$a | S; RegReplace('[\\s](.*)', '')
020$a | 020$q | If (RegFind(@020$a, '\\(') >= 0) Then S; RegReplace('(.*)\\(', ''); RegReplace('\\)', ''); SIDOSASUT
020$? | 020$? | Replace('.,' By ','); \ // Tapaukset tyyliin "020$q sid., muovikannet"
                Delete('('); \
                Delete(')'); \
                Delete('.', At Ending); \ // Poistetaan piste lyhenteen perästä ennen avaamista
                SIDOSASUT

024I1 | 024I1 | S
024I2 | 024I2 | S
024   | 024   | Replace('.,' By ','); \ // Tapaukset tyyliin "024$q sid., muovikannet"
                Delete('.', At Ending); \ // Poistetaan piste lyhenteen perästä ennen avaamista
                SIDOSASUT

100I1 | 100I1  | S
100I2 | 100I2  | S
100$a | 100$a  | S; If ((100$c Follows 100$a) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$b | 100$b  | S; If ((100$c Follows 100$b) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$c | 100$c  | FIKTIIVINENHAHMO
100$d | 100$d  | AIKAMAAREET
100$4 | 100$4  | Table ('Tekijanfunktiot.tbl')
100$? | 100$?  | S

110I1 | 110I1  | S
110I2 | 110I2  | S
110$c | 110$c  | FIKTIIVINENYHTEISO; AIKAMAAREET
110$4 | 110$4  | Table ('Tekijanfunktiot.tbl')
110$? | 110$?  | S

111I1 | 111I1  | S
111I2 | 111I2  | S
111$4 | 111$4  | Table ('Tekijanfunktiot.tbl')
111$? | 111$?  | S

130I1 | 130I1  | S
130I2 | 130I2  | S

#if (RegFind(@130$a, 'Triot') >= 0)
130$m | <A30$m | TRIOT
#endif

#if (RegFind(@130$a, 'Kvartetot') >= 0)
130$m | <A30$m | KVARTETOT
#endif

#if (RegFind(@130$a, 'Kvintetot') >= 0)
130$m | <A30$m | KVINTETOT
#endif

#if (RegFind(@130$a, 'Triot') < 0) And (RegFind(@130$a, 'Kvartetot') < 0) And (RegFind(@130$a, 'Kvintetot') < 0)
130$m | <A30$m | ESITYSKOKOONPANO
#endif

130$o | <A30$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
130$p | <A30$p | If (Not NextSub='p') Then RAAMATTU
130$? | <A30$? | S

A30 | 130 | S

222I1 | 222I1 | S
222I2 | 222I2 | S
222   | 222   | S; RegReplace('verkkojulkaisu', 'verkkoaineisto')

240I1 | 240I1  | S
240I2 | 240I2  | S

#if (RegFind(@240$t, 'Triot') >= 0) Or (RegFind(@240$a, 'Triot') >= 0)
240$m | <F40$m | TRIOT
#endif

#if (RegFind(@240$t, 'Kvartetot') >= 0) Or (RegFind(@240$a, 'Kvartetot') >= 0)
240$m | <F40$m | KVARTETOT
#endif

#if (RegFind(@240$t, 'Kvintetot') >= 0) Or (RegFind(@240$a, 'Kvintetot') >= 0)
240$m | <F40$m | KVINTETOT
#endif

// Jos aiemmat säännöt eivät tärpänneet eli väliaikaista kenttää F40$m ei ole luotu
#if Not Exists(F40$m)
240$m | <F40$m | ESITYSKOKOONPANO
#endif
                 
240$o | <F40$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
240$p | <F40$p | If (Not NextSub='p') Then RAAMATTU
240$? | <F40$? | S

F40   | 240 | S

243I1 | 243I1  | S
243I2 | 243I2  | S

#if (RegFind(@243$a, 'Triot') >= 0)
243$m | <B43$m | TRIOT
#endif

#if (RegFind(@243$a, 'Kvartetot') >= 0)
243$m | <B43$m | KVARTETOT
#endif

#if (RegFind(@243$a, 'Kvintetot') >= 0)
243$m | <B43$m | KVINTETOT
#endif

#if (RegFind(@243$a, 'Triot') < 0) And (RegFind(@243$a, 'Kvartetot') < 0) And (RegFind(@243$a, 'Kvintetot') < 0)
243$m | <B43$m | ESITYSKOKOONPANO
#endif

243$o | <B43$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
243$p | <B43$p | If (Not NextSub='p') Then RAAMATTU
243$? | <B43$? | S

B43 | 243 | S

245I1 | 245I1  | S
245I2 | 245I2  | S
245$a | <F45$a | S
245$b | <F45$b | S
245$c | <F45$c | S; RegReplace('\\[et al.\\]', '[ja muita]')
245$f | <F45$f | S
245$g | <F45$g | S
245$p | <F45$p | S
245$6 | <F45$6 | S
245$8 | <F45$8 | S
245$k | <F45$k | S
245$n | <F45$n | S

F45 | 245 | S

250I1 | 250I1  | S
250I2 | 250I2  | S
250   | 250    | PAINOSMERKINTO

#if (Not Exists(@773))
260I1 | 260I1 | S
260I2 | 260I2 | S
260$a | 260$a | S; RegReplace('\\[S.l.\\]', '[Kustannuspaikka tuntematon]'); RegReplace('\\[s.l.\\]', '[kustannuspaikka tuntematon]')
260$b | 260$b | S; RegReplace('\\[s.n.\\]', '[kustantaja tuntematon]')
260$c | 260$c | RegReplace('\\[s.a.\\]', '[julkaisuaika tuntematon]'); \
                If (RegFind(S, 'cop|©|℗|[Cc]|^p') >= 0) And (RegFind(S, '\\d{4}') >= 0) '[' + RegMatch(0) + ']' \
                Else S;
260$? | 260$? | S
#endif

#if (RegFind(@260$c, 'cop.|©|[Cc]') >= 0) And (RegFind(@260$c, '\\d{4}') >= 0) And (Not Exists(@773))
260I1 | <X64I1 | ' '
260I2 | <X64I2 | '4'
260$c | <X64$c | '©' + RegMatch(0);
X64I1 | 264I1  | S
X64I2 | 264I2  | S
// Kenttään 264$c viedään myös mahdolliset hakasulkeet
X64$c | 264$c  | If (RegFind(260$c, '\\[') >= 0) '[' + S + ']' Else S
X64$? | 264$?  | S
#endif

#if (RegFind(@260$c, '^p|℗') >= 0) And (RegFind(@260$c, '\\d{4}') >= 0) And (Not Exists(@773))
260I1 | <X64I1 | ' '
260I2 | <X64I2 | '4'
260$c | <X64$c | '℗ ' + RegMatch(0);
X64I1 | 264I1  | S
X64I2 | 264I2  | S
X64$c | 264$c  | If (RegFind(260$c, '\\[') >= 0) '[' + S + ']' Else S
X64$? | 264$?  | S
#endif

270I1 | 270I1  | S
270I2 | 270I2  | S
270$4 | 270$4  | Table ('Tekijanfunktiot.tbl')
270$? | 270$?  | S

300I1 | 300I1 | S
300I2 | 300I2 | S

#if (@008/36-38/ = 'eng')
300$a | 300$a | 300AE; RegReplace('(\\d*) p\\.', '\\1 pages')
#endif

#if (RegFind(@041, 'eng') < 0)
300$a | 300$a | 300AE // Ei avata p.-lyhennettä jos kyseessä on esim. ranska
#endif

300$b | 300$b | 300BE
300$c | 300$c | S
300$e | 300$e | 300BE

// LUODAAN 338-KENTÄT, JOS NIITÄ EI OLE TIETUEESSA VALMIINA

// 338-kenttiä voi olla useampia esim. moniviestimissä. Samanmuotoiset kentät luovat säännöt on ryhmitelty peräkkäin.
// Kahta samansisältöistä kenttää ei luoda missään tilanteessa.

// NIDE

#if (Not Exists(@338)) \
  And ( @000/7/ = 'a' Or @000/7/ = 'c' Or (RegFind(@300$a, '[Kk]irja|[Kk]artasto') >= 0) ) \
  And (Not Exists(@773)) \
  And (RegFind(@337$a, 'ei välittävää laitetta') >= 0)

000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'nide'
000 | 338(newest)$b | 'nc'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNILEVY

#if (Not Exists(@338)) \
  And (RegFind(@300$a, 'CD-levy|äänilevy') >= 0) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänilevy'
000 | 338(newest)$b | 'sd'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNIKASETTI

#if (Not Exists(@338)) \
  And If ( \
  (RegFind(@300$a, '[Cc]-kas') >= 0) \
  Or (RegFind(@300$a, '[Dd][Aa][Tt]-kas|[Dd][Cc][Cc]-kas|[Ää]nikas') >= 0) \
  ) \
  And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänikasetti'
000 | 338(newest)$b | 'ss'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// TIETOLEVY

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Rr][Oo][Mm]') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'tietolevy'
000 | 338(newest)$b | 'cd'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VIDEOLEVY

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd][Vv][Dd]-levy|[Vv]ideolevy'') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'videolevy'
000 | 338(newest)$b | 'vd'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VIDEOKASETTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]ideokas') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'videokasetti'
000 | 338(newest)$b | 'vf'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// PIIRTOHEITINKALVO

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]alvo') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'piirtoheitinkalvo'
000 | 338(newest)$b | 'gt'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// DIA

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]uultokuv|[Dd]iaa') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'dia'
000 | 338(newest)$b | 'gs'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MIKROKORTTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Mm]ikrokortti') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrokortti'
000 | 338(newest)$b | 'he'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// KORTTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]ortti') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'kortti'
000 | 338(newest)$b | 'no'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ARKKI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Aa]rkki') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'arkki'
000 | 338(newest)$b | 'nb'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MIKROFILMIRULLA

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Mm]ikrofilmirulla') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrofilmirulla'
000 | 338(newest)$b | 'hj'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNIKELA

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ää]änikela') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänikela'
000 | 338(newest)$b | 'st'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MUU

#if (Not Exists(@338)) \
  And If (RegFind(@300$a, '[Tt]aulu|[Uu][Ss][Bb]-muisti') >= 0) \
  And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'muu'
000 | 338(newest)$b | 'nz'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VERKKOAINEISTO

#if (Not Exists(@338)) \
  And If ( \
  (RegFind(@300$a, '[Vv]erkkojulkaisu|[Tt]iedosto') >= 0) \
  Or (RegFind(@516$a, '[Vv]erkkoaineisto') >= 0) \
  Or (RegFind(@256$a, '[Vv]erkkoaineisto') >= 0) \
  Or ( (RegFind(@300$a, '[Ii][Bb]ooks|[Ff][Ll][Aa][Cc]|[Hh][Tt][Mm][Ll]') >= 0) And (@008/24/ = 'o') ) \
  ) \
  And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'verkkoaineisto'
000 | 338(newest)$b | 'cr'
000 | 338(newest)$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) \
  And If (RegFind(000/8/, 's') >= 0) \
  And If (Not Exists(@773)) \
  And If (RegFind(@337$a, 'elektroninen') >= 0) \
  And If (RegFind(%338$a, 'verkkoaineisto') < 0)
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'verkkoaineisto'
000 | 338(newest)$b | 'cr'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// 338-KENTTIEN LUOMINEN LOPPUU

336I1 | 336I1 | S
336I2 | 336I2 | S
336$a | 336$a | Table ('336_a.tbl')

#if Not (Exists(@336$b))
336$a | 336$b | If (InTable(S, '336_b.tbl')) Then Table ('336_b.tbl')
336$a | 336$2 | If (Exists(%336$b)) Then 'rdacontent'
#endif

#if (Exists(@336$b))
336$b | 336$b | S
336$2 | 336$2 | 'rdacontent'
#endif

336$8 | 336$8 | S


337I1 | 337I1 | S
337I2 | 337I2 | S
337$a | 337$a | Table ('337_a.tbl')

#if Not (Exists(@337$b))
337$a | 337$b | Table ('337_b.tbl')
337$a | 337$2 | 'rdamedia'
#endif

#if (Exists(@337$b))
337$b | 337$b | S
337$2 | 337$2 | S
#endif

337$8 | 337$8 | S

#if (Exists(@338))
338I1 | 338I1 | S
338I2 | 338I2 | S
338$a | 338$a | Table ('338_a.tbl')
338$a | 338$b | Table ('338_b.tbl')
338$2 | 338$2 | 'rdacarrier'
#endif

500I1 | 500I1 | S
500I2 | 500I2 | S
500   | 500   | S; RegReplace('et al.', 'ja muita')

510I1 | 510I1 | S
510I2 | 510I2 | S
510   | 510   | S; RegReplace('et al.', 'ja muita')

511I1 | 511I1 | S
511I2 | 511I2 | S
511$g | 511$g | If (RegFind(S, '\\d*-\\d*') >= 0) Then \
                RegReplace('[^s]?s\\.|ss\\.', 'sivut', 'g') Else S
511$? | 511$? | S

516I1 | 516I1 | S
516I1 | 516I2 | S
516   | 516   | S

530I1 | 530I1 | S
530I2 | 530I2 | S
530   | 530   | S; RegReplace('paperimuodossa', 'painettuna'); \
                   RegReplace('Verkkojulkaisu', 'Verkkoaineisto'); \
                   RegReplace('verkkojulkaisuna', 'verkkoaineistona')

538I1 | 538I1 | S
538I1 | 538I2 | S
538   | 538   | S

600I1 | 600I1  | S
600I2 | 600I2  | S
600$c | <C60$c | FIKTIIVINENHAHMO
600$d | <C60$d | AIKAMAAREET

#if (RegFind(@600$t, 'Triot') >= 0)
600$m | <C60$m | TRIOT
#endif

#if (RegFind(@600$t, 'Kvartetot') >= 0)
600$m | <C60$m | KVARTETOT
#endif

#if (RegFind(@600$t, 'Kvintetot') >= 0)
600$m | <C60$m | KVINTETOT
#endif

#if (RegFind(@600$t, 'Triot') < 0) And (RegFind(@600$t, 'Kvartetot') <0) And (RegFind(@600$t, 'Kvintetot') < 0)
600$m | <C60$m | S
#endif

600$o | <C60$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
600$p | <C60$p | If (Not NextSub='p') Then RAAMATTU
600$4 | <C60$4 | Table ('Tekijanfunktiot.tbl')
600$? | <C60$? | S

C60 | 600 | S

610I1 | 610I1  | S
610I2 | 610I2  | S
610$c | <D61$c | FIKTIIVINENYHTEISO

#if (RegFind(@610$t, 'Triot') >= 0)
610$m | <D61$m | TRIOT
#endif

#if (RegFind(@610$t, 'Kvartetot') >= 0)
610$m | <D61$m | KVARTETOT
#endif

#if (RegFind(@610$t, 'Kvintetot') >= 0)
610$m | <D61$m | KVINTETOT
#endif

#if (RegFind(@610$t, 'Triot') < 0) And (RegFind(@610$t, 'Kvartetot') < 0) And (RegFind(@610$t, 'Kvintetot') < 0)
610$m | <D61$m | S
#endif

610$o | <D61$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
610$p | <D61$p | If (Not NextSub='p') Then RAAMATTU
610$4 | <C61$4 | Table ('Tekijanfunktiot.tbl')
610$? | <D61$? | S

D61 | 610 | S

611I1 | 611I1  | S
611I2 | 611I2  | S
611$4 | 611$4  | Table ('Tekijanfunktiot.tbl')
611$? | 611$?  | S

630I1 | 630I1  | S
630I2 | 630I2  | S

#if (RegFind(@630$a, 'Triot') >= 0)
630$m | <E63$m | TRIOT
#endif

#if (RegFind(@630$a, 'Kvartetot') >= 0)
630$m | <E63$m | KVARTETOT
#endif

#if (RegFind(@630$a, 'Kvintetot') >= 0)
630$m | <E63$m | KVINTETOT
#endif

#if (RegFind(@630$a, 'Triot') < 0) And (RegFind(@630$a, 'Kvartetot') < 0) And (RegFind(@630$a, 'Kvintetot') < 0)
630$m | <E63$m | S
#endif

630$o | <E63$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
630$p | <E63$p | If (Not NextSub='p') Then RAAMATTU
630$4 | <E63$4 | Table ('Tekijanfunktiot.tbl')
630$? | <E63$? | S

E63 | 630 | S

650I1 | 650I1  | S
650I2 | 650I2  | S
650$4 | 650$4  | Table ('Tekijanfunktiot.tbl')
650$? | 650$?  | S

651I1 | 651I1  | S
651I2 | 651I2  | S
651$4 | 651$4  | Table ('Tekijanfunktiot.tbl')
651$? | 651$?  | S

654I1 | 654I1  | S
654I2 | 654I2  | S
654$4 | 654$4  | Table ('Tekijanfunktiot.tbl')
654$? | 654$?  | S

662I1 | 662I1  | S
662I2 | 662I2  | S
662$4 | 662$4  | Table ('Tekijanfunktiot.tbl')
662$? | 662$?  | S

700I1 | 700I1  | S
700I2 | 700I2  | S
700$c | <G70$c | FIKTIIVINENHAHMO
700$d | <G70$d | AIKAMAAREET

#if (RegFind(@700$t, 'Triot') >= 0)
700$m | <G70$m | TRIOT
#endif

#if (RegFind(@700$t, 'Kvartetot') >= 0)
700$m | <G70$m | KVARTETOT
#endif

#if (RegFind(@700$t, 'Kvintetot') >= 0)
700$m | <G70$m | KVINTETOT
#endif

#if (RegFind(@700$t, 'Triot') < 0) And (RegFind(@700$t, 'Kvartetot') < 0) And (RegFind(@700$t, 'Kvintetot') < 0)
700$m | <G70$m | ESITYSKOKOONPANO
#endif

700$o | <G70$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
700$p | <G70$p | If (Not NextSub='p') Then RAAMATTU
700$4 | <G70$4 | Table ('Tekijanfunktiot.tbl')
700$? | <G70$? | S

G70 | 700 | S

710I1 | 710I1  | S
710I2 | 710I2  | S
710$c | <H71$c | FIKTIIVINENYHTEISO

#if (RegFind(@710$t, 'Triot') >= 0)
710$m | <H71$m | TRIOT
#endif

#if (RegFind(@710$t, 'Kvartetot') >= 0)
710$m | <H71$m | KVARTETOT
#endif

#if (RegFind(@710$t, 'Kvintetot') >= 0)
710$m | <H71$m | KVINTETOT
#endif

#if (RegFind(@710$t, 'Triot') < 0) And (RegFind(@710$t, 'Kvartetot') < 0) And (RegFind(@710$t, 'Kvintetot') < 0)
710$m | <H71$m | S
#endif

710$o | <H71$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
710$p | <H71$p | If (Not NextSub='p') Then RAAMATTU
710$4 | <H71$4 | Table ('Tekijanfunktiot.tbl')
710$? | <H71$? | S

H71 | 710 | S

720I1 | 720I1  | S
720I2 | 720I2  | S
720$4 | 720$4  | Table ('Tekijanfunktiot.tbl')
720$? | 720$?  | S

730I1 | 730I1  | S
730I2 | 730I2  | S

#if (RegFind(@730$a, 'Triot') >= 0)
730$m | <J73$m | TRIOT
#endif

#if (RegFind(@730$a, 'Kvartetot') >= 0)
730$m | <J73$m | KVARTETOT
#endif

#if (RegFind(@730$a, 'Kvintetot') >= 0)
730$m | <J73$m | KVINTETOT
#endif

#if (RegFind(@730$a, 'Triot') < 0) And (RegFind(@730$a, 'Kvartetot') < 0) And (RegFind(@730$a, 'Kvintetot') < 0)
730$m | <J73$m | S
#endif

730$o | <J73$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
730$p | <J73$p | If (Not NextSub='p') Then RAAMATTU
730$? | <J73$? | S

J73 | 730 | S

76?I1 | 76?I1 | S
76?I2 | 76?I2 | S
76?$c | 76?$c | S; RegReplace('verkkojulkaisu', 'verkkoaineisto')
76?   | 76?   | S

77?I1 | 77?I1 | S
77?I2 | 77?I2 | S
77?$c | 77?$c | S; RegReplace('verkkojulkaisu', 'verkkoaineisto')
77?   | 77?   | S

78?I1 | 78?I1 | S
78?I2 | 78?I2 | S
78?$c | 78?$c | S; RegReplace('verkkojulkaisu', 'verkkoaineisto')
78?   | 78?   | S

800I1 | 800I1  | S
800I2 | 800I2  | S
800$c | <K80$c | FIKTIIVINENHAHMO
800$d | <K80$d | AIKAMAAREET

#if (RegFind(@800$t, 'Triot') >= 0)
800$m | <K80$m | TRIOT
#endif

#if (RegFind(@800$t, 'Kvartetot') >= 0)
800$m | <K80$m | KVARTETOT
#endif

#if (RegFind(@800$t, 'Kvintetot') >= 0)
800$m | <K80$m | KVINTETOT
#endif

#if Not Exists(@800$t) Or ((RegFind(@800$t, 'Triot') >= 0) And (RegFind(@800$t, 'Kvartetot') >= 0) And (RegFind(@800$t, 'Kvintetot') >= 0))
800$m | <K80$m | ESITYSKOKOONPANO
#endif

800$o | <K80$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
800$p | <K80$p | If (Not NextSub='p') Then RAAMATTU
800$4 | <K80$4 | Table ('Tekijanfunktiot.tbl')
800$? | <K80$? | S

K80 | 800 | S

810I1 | 810I1  | S
810I2 | 810I2  | S

#if (RegFind(@810$t, 'Triot') >= 0)
810$m | <L81$m | TRIOT
#endif

#if (RegFind(@810$t, 'Kvartetot') >= 0)
810$m | <L81$m | KVARTETOT
#endif

#if (RegFind(@810$t, 'Kvintetot') >= 0)
810$m | <L81$m | KVINTETOT
#endif

#if Not Exists(@810$t) Or ((RegFind(@810$t, 'Triot') >= 0) And (RegFind(@810$t, 'Kvartetot') >= 0) And (RegFind(@810$t, 'Kvintetot') >= 0))
810$m | <L81$m | S
#endif

810$o | <L81$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
810$p | <L81$p | If (Not NextSub='p') Then RAAMATTU
810$4 | <L81$4 | Table ('Tekijanfunktiot.tbl')
810$? | <L81$? | S

L81 | 810 | S

811I1 | 811I1  | S
811I2 | 811I2  | S
811$4 | 811$4  | Table ('Tekijanfunktiot.tbl')
811$? | 811$?  | S

830I1 | 830I1  | S
830I2 | 830I2  | S

#if (RegFind(@830$a, 'Triot') >= 0)
830$m | <M83$m | TRIOT
#endif

#if (RegFind(@830$a, 'Kvartetot') >= 0)
830$m | <M83$m | KVARTETOT
#endif

#if (RegFind(@830$a, 'Kvintetot') >= 0)
830$m | <M83$m | KVINTETOT
#endif

#if Not Exists(@830$a) Or ((RegFind(@830$a, 'Triot') >= 0) And (RegFind(@830$a, 'Kvartetot') >= 0) And (RegFind(@830$a, 'Kvintetot') >= 0))
830$m | <M83$m | S
#endif

830$o | <M83$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
830$p | <M83$p | If (Not NextSub='p') Then RAAMATTU
830$? | <M83$? | S

M83 | 830 | S

856I1 | 856I1 | S
856I2 | 856I2 | S
856   | 856   | S; RegReplace('verkkojulkaisuun', 'verkkoaineistoon')

#if (TAG != 'DEL')
???I1           | ???I1           | S
???I2           | ???I2           | S
???             | ???             | S
#endif