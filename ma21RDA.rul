RDA-konversio
versio ?.7.2015 / Kansalliskirjasto

#define version 317

#define macro 300ae | RegReplace('n\\. ', 'noin'); \
                      RegReplace('ss\\.', 'sivut'); \
                      RegReplace('s\\,', 'sivua,'); \
                      RegReplace('kuv\\.', 'kuvitettu'); \
                      RegReplace('verkkojulkaisu', 'verkkoaineisto'); \
                      RegReplace('1 vol\\.', '1 nide'); \
                      If (RegFind(S, '[023456789] vol\\.') >= 0) RegReplace('vol\\.', 'nidettä'); \
                      If (RegFind(S, '\\d* s\\.') >= 0) RegReplace('s\\.', 'sivua'); \
                      If (RegFind(S, 'S\\.(.)*\\d*-\\d*') >= 0) RegReplace('S\\.', 'sivut'); \
                      If (RegFind(S, 'S\\.(.)*\\d*[^-]') >= 0) RegReplace('S\\.', 'sivu')

#define macro 300be | RegReplace('kartt\\.', 'karttoja'); \
                      RegReplace('kuv\\.', 'kuvitettu'); \
                      RegReplace('mv\\.', 'mustavalkoinen'); \
                      RegReplace('vär\\.', 'värillinen'); \
                      RegReplace('värikuv\\.', 'värikuvitus'); \
                      RegReplace('ääni ', 'äänellinen'); \
                      RegReplace('nuott\\.', 'nuotteja'); \
                      If (RegFind(S, '\\d* s\\.') >= 0) RegReplace('s\\.', 'sivua'); \
                      If (RegFind(S, '\\d*-\\d*') >= 0) RegReplace('[^s]?s\\.|ss\\.', 'sivut')

// Musiikin esityskokoonpanotermien avaaminen, osakenttä $m kentissä 130, 240, 600, 610, 630, 700, 710, 730, 800, 810, 830
// TODO: Äänialojen lyhenteiden tunnistaminen järkevästi. Missä kontekstissa 'B' = 'basso' ja milloin ei?

#define macro esityskokoonpano | RegReplace('pianotrio', 'piano, viulu, sello'); \
                                 RegReplace('pianokvartetti', 'piano, viulu, alttoviulu, sello'); \
                                 RegReplace('pianokvintetti', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('jousiork.', 'jousiorkesteri'); \
                                 RegReplace('kamariork.', 'orkesteri'); \
                                 RegReplace('puhallinork.', 'puhallinorkesteri'); \
                                 RegReplace('^S|S$|S\\s', 'sopraano'); \
                                 RegReplace('S \\(\\d', 'sopraanot'); \
                                 RegReplace('S \\(\\d', 'sopraanot'); \
                                 RegReplace('Mz sdf', 'mezzosopraano'); \
                                 RegReplace('A sdf', 'altto '); \
                                 RegReplace('Kt sdf', 'kontratenori'); \
                                 RegReplace('(Kt )\\((\\d*)', 'kontratenorit (\\2'); \
                                 RegReplace('T', 'tenori'); \
                                 RegReplace('T \\(\\d', 'tenorit'); \
                                 RegReplace('Bar', 'baritoni'); \
                                 RegReplace('Bar \\(\\d', 'baritonit'); \
                                 RegReplace('B', 'basso'); \
                                 RegReplace('B \\(\\d', 'bassot'); \
                                 RegReplace('kät\\.', 'kätisesti'); \
                                 RegReplace('soitinääni', 'määrittämätön soitin'); \
                                 If (RegFind(S, 'A \\(\\d') >=0) RegReplace('A ', 'altot '); \
                                 If (RegFind(S, 'Mz \\(\\d') >=0) RegReplace('Mz', 'mezzosopraanot'); \
                                 If (RegFind(S, ', jousitrio') < 0) RegReplace('jousitrio', 'viulu, alttoviulu, sello'); \
                                 If (RegFind(S, ', jousikvartetti') <0) RegReplace('jousikvartetti', 'viulut (2), alttoviulu, sello'); \
                                 If (RegFind(S, ', jousikvintetti') <0) RegReplace('jousikvintetti', 'viulut (2), alttoviulut (2), sello'); \
                                 If (RegFind(S, ', puupuhallinkvartetti') <0) RegReplace('puupuhallinkvartetti', 'huilu, oboe, klarinetti, fagotti'); \
                                 If (RegFind(S, ', puhallinkvintetti') <0) RegReplace('puhallinkvintetti', 'huilu, oboe, klarinetti, käyrätorvi, fagotti'); \
                                 If (RegFind(S, '[^A-Za-z]ork\\.') >= 0 ) RegReplace('ork.', 'orkesteri'); \
                                 If (RegFind(S, '^ork\\.') >= 0 ) RegReplace('ork.', 'orkesteri')
                                
#define macro triot            | RegReplace('jouset', 'viulu, alttoviulu, sello'); \
                                 RegReplace('piano, jouset', 'piano, viulu, sello')

#define macro kvartetot        | RegReplace('jouset', 'viulut (2), alttoviulu, sello'); \
                                 RegReplace('puupuhaltimet', 'huilu, oboe, klarinetti, fagotti'); \
                                 RegReplace('piano, jouset', 'piano, viulu, alttoviulu, sello')

#define macro kvintetot        | RegReplace('jouset', 'viulut (2), alttoviulut (2), sello'); \
                                 RegReplace('puupuhaltimet', 'huilu, oboe, klarinetti, käyrätorvi, fagotti'); \
                                 RegReplace('piano, jouset', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('puhaltimet', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro sovitusmerkinto | RegReplace('sov\\.', 'sovitettu')

#define macro raamattu | RegReplace('UT', 'Uusi testamentti'); \
                         RegReplace('VT', 'Vanha testamentti')

#define macro fiktiivinen | RegReplace('fikt\\.', '(fiktiivinen hahmo)'); \
                            RegReplace('fiktiivinen henkilö', '(fiktiivinen hahmo)')

#define macro aikamaareet | RegReplace('^s\\.', 'syntynyt'); \
                            RegReplace('^k\\.', 'kuollut'); \
                            RegReplace('n\\.', 'noin'); \
                            RegReplace('vs\\.', 'vuosisata')
                                               
000/1-18/ | 000/1-18/ | S
000/19/ | 000/19/ | 'i' // ??
000/20-24/ | 000/20-24/ | S

001 | <DEL   | S

003 | <DEL   | S

020I1 | 020I1 | S
020I2 | 020I2 | S
020   | 020   | S; Replace('.,' By ','); \ // Tapaukset tyyliin "020$q sid., muovikannet"
                   Delete('.', At Ending); \ // Poistetaan piste lyhenteen perästä ennen avaamista
                   RegReplace('sid', 'sidottu'); \
                   RegReplace('nid', 'nidottu'); \
                   RegReplace('virh', 'virheellinen')

100I1 | 100I1  | S
100I2 | 100I2  | S
100$a | 100$a  | S; If ((100$c Follows 100$a) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$b | 100$b  | S; If ((100$c Follows 100$b) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$c | 100$c  | fiktiivinen
100$d | 100$d  | aikamaareet
100$? | 100$?  | S

130I1 | 130I1  | S
130I2 | 130I2  | S
130$m | <A30$m | If (RegFind(@130$a, 'Triot') >= 0) triot; \
                 If (RegFind(@130$a, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@130$a, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
130$o | <A30$o | sovitusmerkinto; esityskokoonpano
130$p | <A30$p | If (Not NextSub='p') Then raamattu
130$? | <A30$? | S

A30 | 130 | S

240I1 | 240I1  | S
240I2 | 240I2  | S
240$m | <F40$m | If (RegFind(@240$t, 'Triot') >= 0) triot; \
                 If (RegFind(@240$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@240$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
240$o | <F40$o | sovitusmerkinto; esityskokoonpano
240$p | <F40$p | If (Not NextSub='p') Then raamattu
240$? | <F40$? | S

F40   | 240 | S

243I1 | 243I1  | S
243I2 | 243I2  | S
243$m | <B43$m | If (RegFind(@243$a, 'Triot') >= 0) triot; \
                 If (RegFind(@243$a, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@243$a, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
243$o | <B43$o | sovitusmerkinto; esityskokoonpano
243$p | <B43$p | If (Not NextSub='p') Then raamattu
243$? | <B43$? | S

B43 | 243 | S

245I1 | 245I1  | S
245I2 | 245I2  | S
245$a | <F45$a | S
245$b | <F45$b | S
245$c | <F45$c | S; RegReplace('\\[et al.\\]', '[ja muita]')
245$f | <F45$f | S
245$g | <F45$g | S
245$p | <F45$p | S
245$6 | <F45$6 | S
245$8 | <F45$8 | S
245$k | <F45$k | S
245$n | <F45$n | S

F45 | 245 | S

#if (Not Exists(@773))
260I1 | 260I1 | S
260I2 | 260I2 | S
260$a | 260$a | S; RegReplace('\\[S.l.\\]', '[Kustannuspaikka tuntematon]'); RegReplace('\\[s.l.\\]', '[kustannuspaikka tuntematon]')
260$b | 260$b | S; RegReplace('\\[s.n.\\]', '[kustantaja tuntematon]')
260$c | 260$c | RegReplace('\\[s.a.\\]', '[julkaisuaika tuntematon]'); \
                If (RegFind(S, 'cop|©|℗|[Cc]|^p') >= 0) And (RegFind(S, '\\d{4}') >= 0) '[' + RegMatch(0) + ']' \
                Else S;
260$? | 260$? | S
#endif

#if (RegFind(@260$c, 'cop.|©|[Cc]') >= 0) And (RegFind(@260$c, '\\d{4}') >= 0) And (Not Exists(@773))
260I1 | <X64I1 | ' '
260I2 | <X64I2 | '4'
260$c | <X64$c | '© ' + RegMatch(0);
X64I1 | 264I1  | S
X64I2 | 264I2  | S
// Kenttään 264$c viedään myös mahdolliset hakasulkeet
X64$c | 264$c  | If (RegFind(260$c, '\\[') >= 0) '[' + S + ']' Else S
X64$? | 264$?  | S
#endif

#if (RegFind(@260$c, '^p|℗') >= 0) And (RegFind(@260$c, '\\d{4}') >= 0) And (Not Exists(@773))
260I1 | <X64I1 | ' '
260I2 | <X64I2 | '4'
260$c | <X64$c | '℗ ' + RegMatch(0);
X64I1 | 264I1  | S
X64I2 | 264I2  | S
X64$c | 264$c  | If (RegFind(260$c, '\\[') >= 0) '[' + S + ']' Else S
X64$? | 264$?  | S
#endif

300I1 | 300I1 | S
300I2 | 300I2 | S
300$a | 300$a | 300ae //; If ((Not (Exists($c) Or Exists($d) Or Exists($e))) And (RegFind(S, '\.$') < 0)) Then S + '.' Else 300ae
300$b | 300$b | 300be
300$c | 300$c | S
300$e | 300$e | 300be

// LUODAAN 338-KENTÄT, JOS NIITÄ EI OLE TIETUEESSA VALMIINA

#if (Not Exists(@338)) And If (RegFind(000/7/, 'a') >= 0) And If (Not Exists(@773)) And If (RegFind(@337$a, 'ei välittävää laitetta') >= 0)
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
000 | 338$a | 'nide'
000 | 338$b | 'nc'
000 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(000/7/, 'c') >= 0) And If (Not Exists(@773)) And If (RegFind(@337$a, 'ei välittävää laitetta') >= 0)
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
000 | 338$a | 'nide'
000 | 338$b | 'nc'
000 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(000/8/, 's') >= 0) And If (Not Exists(@773)) And If (RegFind(@337$a, 'elektroninen') >= 0)
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
000 | 338$a | 'verkkoaineisto'
000 | 338$b | 'cr'
000 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@256$a, '[Vv]erkkoaineisto') >= 0) And If (Not Exists(@773))
256I1 | 338I1 | ' '
256I2 | 338I2 | ' '
256 | 338$a | 'verkkoaineisto'
256 | 338$b | 'cr'
256 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, 'CD-levy') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'äänilevy'
300 | 338$b | 'sd'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, 'äänilevy') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ''
300I2 | 338I2 | ''
300 | 338$a | 'äänilevy'
300 | 338$b | 'sd'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Cc]-kas') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'äänikasetti'
300 | 338$b | 'ss'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd][Aa][Tt]-kas') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'äänikasetti'
300 | 338$b | 'ss'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd][Cc][Cc]-kas') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'äänikasetti'
300 | 338$b | 'ss'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ää]nikas') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'äänikasetti'
300 | 338$b | 'ss'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Rr][Oo][Mm]') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'tietolevy'
300 | 338$b | 'cd'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd][Vv][Dd]-levy') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'videolevy'
300 | 338$b | 'vd'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]ideolevy') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'videolevy'
300 | 338$b | 'vd'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]ideokas') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'videokasetti'
300 | 338$b | 'vf'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]alvo') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'piirtoheitinkalvo'
300 | 338$b | 'gt'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]uultokuv') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'dia'
300 | 338$b | 'gs'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd]iaa') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'dia'
300 | 338$b | 'gs'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Mm]ikrokortti') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'mikrokortti'
300 | 338$b | 'he'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]ortti') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'kortti'
300 | 338$b | 'no'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Aa]rkki') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'arkki'
300 | 338$b | 'nb'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Mm]ikrofilmirulla') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'mikrofilmirulla'
300 | 338$b | 'hj'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ää]änikela') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'äänikela'
300 | 338$b | 'st'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Tt]aulu') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'muu'
300 | 338$b | 'nz'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]erkkojulkaisu') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'verkkoaineisto'
300 | 338$b | 'cr'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Hh][Tt][Mm][Ll]') >= 0) And If (@008/24/ = 'o') And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'verkkoaineisto'
300 | 338$b | 'cr'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ii][Bb]ooks') >= 0) And If (@008/24/ = 'o') And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'verkkoaineisto'
300 | 338$b | 'cr'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ff][Ll][Aa][Cc]') >= 0) And If (@008/24/ = 'o') And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'verkkoaineisto'
300 | 338$b | 'cr'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Tt]iedosto') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'verkkoaineisto'
300 | 338$b | 'cr'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Uu][Ss][Bb]-muisti') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'muu'
300 | 338$b | 'cz'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]artasto') >= 0) And If (Not Exists(@773))
300I1 | 338I1 | ' '
300I2 | 338I2 | ' '
300 | 338$a | 'nide'
300 | 338$b | 'nc'
300 | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@516$a, '[Vv]erkkoaineisto') >= 0) And If (Not Exists(@773))
516I1 | 338I1 | ' '
516I1 | 338I2 | ' '
516$a | 338$a | 'verkkoaineisto'
516$a | 338$b | 'cr'
516$a | 338$2 | 'rdacarrier'
#endif

#if (Not Exists(@338)) And If (RegFind(@538$a, 'USB-muisti') >= 0) And If (Not Exists(@773))
538I1 | 338I1 | ' '
538I1 | 338I2 | ' '
538$a | 338$a | 'muu'
538$a | 338$b | 'cz'
538$a | 338$2 | 'rdacarrier'
#endif

// 338-KENTTIEN LUOMINEN LOPPUU

336I1 | 336I1 | S
336I2 | 336I2 | S
336$a | 336$a | Table ('336_a.tbl')
336$a | 336$b | If (InTable(S, '336_b.tbl')) Then Table ('336_b.tbl')
336$a | 336$2 | If (Exists(%336$b)) Then 'rdacontent'
336$8 | 336$8 | S

337I1 | 337I1 | S
337I2 | 337I2 | S
337$a | 337$a | Table ('337_a.tbl')
337$a | 337$b | Table ('337_b.tbl')
337$a | 337$2 | 'rdamedia'
337$8 | 337$8 | S

#if (Exists(@338))
338I1 | 338I1 | S
338I2 | 338I2 | S
338$a | 338$a | Table ('338_a.tbl')
338$a | 338$b | Table ('338_b.tbl')
338$2 | 338$2 | 'rdacarrier'
#endif

500I1 | 500I1 | S
500I2 | 500I2 | S
500   | 500   | S; RegReplace('et al.', 'ja muita')

510I1 | 510I1 | S
510I2 | 510I2 | S
510   | 510   | S; RegReplace('et al.', 'ja muita')

511I1 | 511I1 | S
511I2 | 511I2 | S
511$g | 511$g | If (RegFind(S, '\\d*-\\d*') >= 0) Then \
                RegReplace('[^s]?s\\.|ss\\.', 'sivut', 'g')
511$? | 511$? | S

516I1 | 516I1 | S
516I1 | 516I2 | S
516   | 516   | S

530I1 | 530I1 | S
530I2 | 530I2 | S
530   | 530   | S; RegReplace('paperimuodossa', 'painettuna'); \
                   RegReplace('Verkkojulkaisu', 'Verkkoaineisto'); \
                   RegReplace('verkkojulkaisuna', 'verkkoaineistona')

538I1 | 538I1 | S
538I1 | 538I2 | S
538   | 538   | S

600I1 | 600I1  | S
600I2 | 600I2  | S
600$c | <C60$c | fiktiivinen
600$d | <C60$d | aikamaareet
600$m | <C60$m | If (RegFind(@600$t, 'Triot') >= 0) triot; \
                 If (RegFind(@600$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@600$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
600$o | <C60$o | sovitusmerkinto; esityskokoonpano
600$p | <C60$p | If (Not NextSub='p') Then raamattu
600$? | <C60$? | S

C60 | 600 | S

610I1 | 610I1  | S
610I2 | 610I2  | S
610$m | <D61$m | If (RegFind(@610$t, 'Triot') >= 0) triot; \
                 If (RegFind(@610$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@610$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
610$o | <D61$o | sovitusmerkinto; esityskokoonpano
610$p | <D61$p | If (Not NextSub='p') Then raamattu
610$? | <D61$? | S

D61 | 610 | S

630I1 | 630I1  | S
630I2 | 630I2  | S
630$m | <E63$m | If (RegFind(@630$a, 'Triot') >= 0) triot; \
                 If (RegFind(@630$a, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@630$a, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
630$o | <E63$o | sovitusmerkinto; esityskokoonpano
630$p | <E63$p | If (Not NextSub='p') Then raamattu
630$? | <E63$? | S

E63 | 630 | S

700I1 | 700I1  | S
700I2 | 700I2  | S
700$c | <G70$c | fiktiivinen
700$d | <G70$d | aikamaareet
700$m | <G70$m | If (RegFind(@700$t, 'Triot') >= 0) triot; \
                 If (RegFind(@700$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@700$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
700$o | <G70$o | sovitusmerkinto; esityskokoonpano
700$p | <G70$p | If (Not NextSub='p') Then raamattu
700$? | <G70$? | S

G70 | 700 | S

710I1 | 710I1  | S
710I2 | 710I2  | S
710$m | <H71$m | If (RegFind(@710$t, 'Triot') >= 0) triot; \
                 If (RegFind(@710$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@710$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
710$o | <H71$o | sovitusmerkinto, esityskokoonpano
710$p | <H71$p | If (Not NextSub='p') Then raamattu
710$? | <H71$? | S

H71 | 710 | S

730I1 | 730I1  | S
730I2 | 730I2  | S
730$m | <J73$m | If (RegFind(@730$a, 'Triot') >= 0) triot; \
                 If (RegFind(@730$a, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@730$a, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
730$o | <J73$o | sovitusmerkinto, esityskokoonpano
730$p | <J73$p | If (Not NextSub='p') Then raamattu
730$? | <J73$? | S

J73 | 730 | S

776I1 | 776I1 | S
776I2 | 776I2 | S
776   | 776   | S; RegReplace('verkkojulkaisu', 'verkkoaineisto')

800I1 | 800I1  | S
800I2 | 800I2  | S
800$c | <K80$c | fiktiivinen
800$d | <K80$d | aikamaareet
800$m | <K80$m | If (RegFind(@800$t, 'Triot') >= 0) triot; \
                 If (RegFind(@800$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@800$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
800$o | <K80$o | sovitusmerkinto, esityskokoonpano
800$p | <K80$p | If (Not NextSub='p') Then raamattu
800$? | <K80$? | S

K80 | 800 | S

810I1 | 810I1  | S
810I2 | 810I2  | S
810$m | <L81$m | If (RegFind(@810$t, 'Triot') >= 0) triot; \
                 If (RegFind(@810$t, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@810$t, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
810$o | <L81$o | sovitusmerkinto, esityskokoonpano
810$p | <L81$p | If (Not NextSub='p') Then raamattu
810$? | <L81$? | S

L81 | 810 | S

830I1 | 830I1  | S
830I2 | 830I2  | S
830$m | <M83$m | If (RegFind(@830$a, 'Triot') >= 0) triot; \
                 If (RegFind(@830$a, 'Kvartetot') >= 0) kvartetot; \
                 If (RegFind(@830$a, 'Kvintetot') >= 0) kvintetot; \
                 Else esityskokoonpano
830$o | <M83$o | sovitusmerkinto, esityskokoonpano
830$p | <M83$p | If (Not NextSub='p') Then raamattu
830$? | <M83$? | S

M83 | 830 | S

856I1 | 856I1 | S
856I2 | 856I2 | S
856   | 856   | S; RegReplace('verkkojulkaisuun', 'verkkoaineistoon')

#if (TAG != 'DEL')
???I1           | ???I1           | S
???I2           | ???I2           | S
???             | ???             | S
#endif