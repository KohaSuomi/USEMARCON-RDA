RDA-konversio - bibliografiset tietueet
versio 8.3.2016 / Kansalliskirjasto (TV)

#define version 317

#define macro 300AE | RegReplace('\\b[Nn]\\.', 'noin', 'g'); \
                      RegReplace('ss\\.', 'sivut', 'g'); \
                      RegReplace('\\bkuv\\.', 'kuvitettu'); \
                      RegReplace('verkkojulkaisu', 'verkkoaineisto'); \
                      RegReplace('Verkkojulkaisu', 'Verkkoaineisto'); \
                      RegReplace('1 vol\\.', '1 nide')
                      
#define macro 300BE | RegReplace('kartt\\.', 'karttoja'); \
                      RegReplace('kuv\\.', 'kuvitettu'); \
                      RegReplace('mv\\.', 'mustavalkoinen'); \
                      RegReplace('vär\\.', 'värillinen'); \
                      RegReplace('värikuv\\.', 'värikuvitus'); \
                      RegReplace('nuott\\.', 'nuotteja'); \
                      RegReplace('\\bill\\.', 'illustrated'); \
                      RegReplace('illus\\.', 'illustrated'); \
                      RegReplace('kuval\\.', 'kuvalehteä'); \
                      RegReplace('diagrs\\.', 'diagrams'); \
                      RegReplace('incl\\.', 'includes'); \
                      RegReplace('tab\\.', 'tables'); \
                      RegReplace('fold\\. maps', 'folded maps'); \
                      RegReplace('(\\d+)\\s*\\b[Ss]\\.', '\\1 sivua', 'g'); \
                      RegReplace('\\b[Ss]\\.\\s*(\\d+)', 'sivut \\1', 'g'); \
                      RegReplace('(\\d*) irtol\\.', '\\1 irtolehteä'); \
                      Replace('kuvas\\.' By 'kuvasivua'); \
                      RegReplace('([^0-9]) (taul[.,])', '\\1 taulukkoja'); \
                      RegReplace('\\btaul\\.', 'taulukkoja'); \
                      RegReplace('hakem\\.', 'hakemisto'); \
                      RegReplace('lyh\\. luett\\.', 'lyhenneluettelo'); \
                      RegReplace('lähdel\\.', 'lähdeluettelo'); \
                      RegReplace('liitel\\.', 'liiteluettelo'); \
                      RegReplace('(\\d*) taul\\.', '\\1 taulukkoa'); \
                      RegReplace('(\\d*) karttal\\.', '\\1 karttaliitettä'); \
                      RegReplace('\\] kuvas\\.', ' kuvasivua'); \
                      RegReplace('1 liites\\.', '1 liitesivu'); \
                      RegReplace('liites\\.', 'liitesivua'); \
                      RegReplace('[Vv]erkkokirja', 'verkkoaineisto')

// Musiikin esityskokoonpanotermien avaaminen, osakenttä $m kentissä 130, 240, 600, 610, 630, 700, 710, 730, 800, 810, 830

#define macro ESITYSKOKOONPANO | RegReplace('pianotrio', 'piano, viulu, sello'); \
                                 RegReplace('pianokvartetti', 'piano, viulu, alttoviulu, sello'); \
                                 RegReplace('pianokvintetti', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('jousiork\\.|jousiork\\b', 'jousiorkesteri'); \
                                 RegReplace('kamariork\\.|kamariork\\b', 'orkesteri'); \
                                 RegReplace('puhallinork\\.|puhallinork\\b', 'puhallinorkesteri'); \
                                 RegReplace('\\bork\\.', 'orkesteri'); \
                                 RegReplace('kät\\.', 'kätisesti'); \
                                 RegReplace('soitinääni', 'määrittämätön soitin'); \
                                 If (RegFind(S, 'sovitettu, jousitrio') >= 0) Or (RegFind(S, ', jousitrio') < 0) RegReplace('jousitrio', 'viulu, alttoviulu, sello'); \
                                 If (RegFind(S, 'sovitettu, jousikvartetti') >= 0) Or (RegFind(S, ', jousikvartetti') < 0) RegReplace('jousikvartetti', 'viulut (2), alttoviulu, sello'); \
                                 If (RegFind(S, 'sovitettu, jousikvintetti') >= 0) Or (RegFind(S, ', jousikvintetti') < 0) RegReplace('jousikvintetti', 'viulut (2), alttoviulut (2), sello'); \
                                 If (RegFind(S, 'sovitettu, puupuhallinkvartetti') >= 0) Or (RegFind(S, ', puupuhallinkvartetti') < 0) RegReplace('puupuhallinkvartetti', 'huilu, oboe, klarinetti, fagotti'); \
                                 If (RegFind(S, 'sovitettu, puhallinkvintetti') >= 0) Or (RegFind(S, ', puhallinkvintetti') < 0) RegReplace('puhallinkvintetti', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro TRIOT            | RegReplace('^piano, jouset', 'piano, viulu, sello'); \
                                 RegReplace('^jouset', 'viulu, alttoviulu, sello')
                                 
#define macro KVARTETOT        | RegReplace('^piano, jouset', 'piano, viulu, alttoviulu, sello');\
                                 RegReplace('^jouset', 'viulut (2), alttoviulu, sello'); \
                                 RegReplace('^puupuhaltimet', 'huilu, oboe, klarinetti, fagotti')
                              
#define macro KVINTETOT        | RegReplace('^jouset', 'viulut (2), alttoviulut (2), sello'); \
                                 RegReplace('^piano, jouset', 'piano, viulut (2), alttoviulu, sello'); \
                                 RegReplace('^puhaltimet', 'huilu, oboe, klarinetti, käyrätorvi, fagotti')

#define macro SOVITUSMERKINTO | RegReplace('sov\\.', 'sovitettu')

#define macro RAAMATTU | RegReplace('\\bUT\\b', 'Uusi testamentti'); \
                         RegReplace('\\bVT\\b', 'Vanha testamentti')

#define macro FIKTIIVINENHAHMO | RegReplace('fikt\\b', '(fiktiivinen hahmo)'); \
                                 RegReplace('fiktiivinen henkilö', '(fiktiivinen hahmo)')

#define macro FIKTIIVINENYHTEISO | RegReplace('fikt\\.', '(fiktiivinen yhteisö)')

#define macro AIKAMAAREET | RegReplace('\\bs\\b', 'syntynyt'); \
                            RegReplace('\\bk\\b', 'kuollut'); \
                            RegReplace('\\bn\\b', 'noin'); \
                            RegReplace('\\bvs\\b', 'vuosisata')

#define macro SIDOSASUT |  RegReplace('\\bsid\\.', 'sidottu'); \
                           RegReplace('\\bnid\\.', 'nidottu'); \
                           RegReplace('\\bvirh\\.', 'virheellinen'); \
                           RegReplace('\\binb\\.', 'inbunden'); \
                           RegReplace('\\bhft\\.', 'häftad'); \
                           RegReplace('\\bpbk\\.', 'paperback'); \
                           RegReplace('\\bhbk\\.', 'hardback'); \
                           RegReplace('\\balk\\.', 'alkaline'); \
                           RegReplace('\\bbk\\.', 'book'); \
                           RegReplace('\\bverkkojulk\\.', 'verkkoaineisto')

#define macro VERKKOAINEISTO | RegReplace('paperimuodossa', 'painettuna'); \
                               RegReplace('Verkkojulkaisu', 'Verkkoaineisto'); \
                               RegReplace('verkkojulkaisuna', 'verkkoaineistona'); \
                               RegReplace('[Ii]nternet-julkaisu', 'verkkoaineisto'); \
                               RegReplace('paperisena', 'painettuna')

000/1-9/ | 000/1-9/ | S
000/10/ | 000/10/ | 'a'
000/11-12/ | 000/11-12/ | '22'
000/13-18/ | 000/13-18/ | S
000/19/ | 000/19/ | 'i'
000/20/ | 000/20/ | S
000/21-24/ | 000/21-24/ | '4500'

001   | <DEL  | S

003   | <DEL  | S

015I1 | 015I1 | S
015I2 | 015I2 | S
015$? | 015$? | Replace('.,' By ','); \ // Tapaukset tyyliin "020$q sid., muovikannet"
                Delete('('); \
                Delete(')'); \
                SIDOSASUT

020I1 | 020I1 | S
020I2 | 020I2 | S
020$a | 020$a | S; RegReplace('[\\s](.*)', '')
020$a | 020$q | If (RegFind(@020$a, '\\(') >= 0) Then S; RegReplace('(.*)\\(', ''); RegReplace('\\)', ''); SIDOSASUT
020$c | <DEL  | S
020$? | 020$? | Replace('.,' By ','); \ // Tapaukset tyyliin "020$q sid., muovikannet"
                Delete('('); \
                Delete(')'); \
                Delete(';'); \
                Delete(':'); \
                SIDOSASUT; \
                Delete('.')

024I1 | 024I1 | S
024I2 | 024I2 | S
024   | 024   | Replace('.,' By ','); \ // Tapaukset tyyliin "024$q sid., muovikannet"
                Delete('.', At Ending); \ // Poistetaan piste lyhenteen perästä ennen avaamista
                SIDOSASUT

028I1 | 028I1  | S
028I2 | 028I2  | S
028   | 028    | S

100I1 | 100I1  | S
100I2 | 100I2  | S
100$a | 100$a  | S; If ((100$c Follows 100$a) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$b | 100$b  | S; If ((100$c Follows 100$b) And RegFind(@100$c, 'fikt') >= 0) Delete (',', At Ending)
100$c | 100$c  | FIKTIIVINENHAHMO
100$d | 100$d  | AIKAMAAREET
100$e | 100$e  | Table ('Funktiotermit.tbl'); If (NextSub($e) = '') Then S + '.'
100$4 | 100$e  | If Not (Exists(@100$e)) Then Table ('Funktiokoodit.tbl'); If (NextSub($e) = '') Then S + '.'
100$? | 100$?  | S

110I1 | 110I1  | S
110I2 | 110I2  | S
110$c | 110$c  | FIKTIIVINENYHTEISO; AIKAMAAREET
110$e | 110$e  | Table ('Funktiotermit.tbl')
110$4 | 110$e  | If Not (Exists(@110$e)) Then Table ('Funktiokoodit.tbl')
110$? | 110$?  | S

111I1 | 111I1  | S
111I2 | 111I2  | S
111$j | 111$j  | Table ('Funktiotermit.tbl')
111$4 | 111$j  | If Not (Exists(@111$j)) Then Table ('Funktiokoodit.tbl')
111$? | 111$?  | S

130I1 | 130I1  | S
130I2 | 130I2  | S

#if (RegFind(@130$a, 'Triot') >= 0)
130$m | <A30$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@130$a, 'Kvartetot') >= 0)
130$m | <A30$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@130$a, 'Kvintetot') >= 0)
130$m | <A30$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@130$a, 'Triot') < 0) And (RegFind(@130$a, 'Kvartetot') < 0) And (RegFind(@130$a, 'Kvintetot') < 0)
130$m | <A30$m | ESITYSKOKOONPANO
#endif

130$o | <A30$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
130$? | <A30$? | S

A30 | 130 | S; RAAMATTU

222I1 | 222I1 | S
222I2 | 222I2 | S
222   | 222   | VERKKOAINEISTO

240I1 | 240I1  | S
240I2 | 240I2  | S

#if (RegFind(@240$t, 'Triot') >= 0) Or (RegFind(@240$a, 'Triot') >= 0)
240$m | <F40$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@240$t, 'Kvartetot') >= 0) Or (RegFind(@240$a, 'Kvartetot') >= 0)
240$m | <F40$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@240$t, 'Kvintetot') >= 0) Or (RegFind(@240$a, 'Kvintetot') >= 0)
240$m | <F40$m | KVINTETOT; ESITYSKOKOONPANO
#endif

// Jos aiemmat säännöt eivät tärpänneet eli väliaikaista kenttää F40$m ei ole luotu
#if Not Exists(F40$m)
240$m | <F40$m | ESITYSKOKOONPANO
#endif
                 
240$o | <F40$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
240$? | <F40$? | S

F40   | 240    | S; RAAMATTU

243I1 | 243I1  | S
243I2 | 243I2  | S

#if (RegFind(@243$a, 'Triot') >= 0)
243$m | <B43$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@243$a, 'Kvartetot') >= 0)
243$m | <B43$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@243$a, 'Kvintetot') >= 0)
243$m | <B43$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@243$a, 'Triot') < 0) And (RegFind(@243$a, 'Kvartetot') < 0) And (RegFind(@243$a, 'Kvintetot') < 0)
243$m | <B43$m | ESITYSKOKOONPANO
#endif

243$o | <B43$o | SOVITUSMERKINTO; ESITYSKOKOONPANO
243$? | <B43$? | S

B43 | 243 | S; RAAMATTU

#if (Not Exists(%100)) And (Not Exists(%110)) And (Not Exists(%111))
245I1 | 245I1  | '0'
#endif

#if Not (Exists(%245I1))
245I1 | 245I1  | S
#endif

245I2 | 245I2  | S

245$a | <F45$a | S
245$b | <F45$b | S
245$c | <F45$c | S; RegReplace('\\[et al\\.\\]', '[ja muita]')
245$f | <F45$f | S
245$g | <F45$g | S
245$p | <F45$p | S
245$6 | <F45$6 | S
245$8 | <F45$8 | S
245$k | <F45$k | S
245$n | <F45$n | S

F45 | 245 | S

#if (Not Exists(@773))
260I1 | 260I1 | S
260I2 | 260I2 | S
260$a | 260$a | S; RegReplace('S\\.\\s*[Ll]\\.', 'Kustannuspaikka tuntematon');
                   RegReplace('[Ss]\\.\\s*[Ll]\\.', 'kustannuspaikka tuntematon');
                   RegReplace('[Ss]\\.\\s*[Nn]\\.', 'kustantaja tuntematon')
260$b | 260$b | S; RegReplace('[Ss]\\.\\s*[Nn]\\.', 'kustantaja tuntematon')
260$c | 260$c | RegReplace('[Ss]\\.\\s*[Aa]\\.*', 'julkaisuaika tuntematon'); \
                If (RegFind(S, 'cop|©|℗|[Cc]|^p') >= 0) And (RegFind(S, '\\d{4}') >= 0) '[' + RegMatch(0) + ']' \
                Else S
260$? | 260$? | S
#endif

// Cop.-vuotta ei alkuperäisestä suunnitelmasta poiketen viedä 264-kenttään

//#if (RegFind(@260$c, 'cop|©|[Cc]') >= 0) And (RegFind(@260$c, '\\d{4}') >= 0) And (Not Exists(@773))
//260I1 | <X64I1 | ' '
//260I2 | <X64I2 | '4'
//260$c | <X64$c | '©' + RegMatch(0);
//X64I1 | 264I1  | S
//X64I2 | 264I2  | S
//// Kenttään 264$c viedään myös mahdolliset hakasulkeet
//X64$c | 264$c  | If (RegFind(260$c, '\\[') >= 0) '[' + S + ']' Else S
//X64$? | 264$?  | S
//#endif
//
//#if (RegFind(@260$c, '^p|℗') >= 0) And (RegFind(@260$c, '\\d{4}') >= 0) And (Not Exists(@773))
//260I1 | <X64I1 | ' '
//260I2 | <X64I2 | '4'
//260$c | <X64$c | '℗ ' + RegMatch(0);
//X64I1 | 264I1  | S
//X64I2 | 264I2  | S
//X64$c | 264$c  | If (RegFind(260$c, '\\[') >= 0) '[' + S + ']' Else S
//X64$? | 264$?  | S
//#endif

#if (Exists(@773))
260I1 | 260I1 | S
260I2 | 260I2 | S
260   | 260   | S
#endif

270I1 | 270I1  | S
270I2 | 270I2  | S
270$4 | 270$4  | S
270$? | 270$?  | S

300I1 | 300I1 | S
300I2 | 300I2 | S

#if (RegFind(@041, 'eng') >= 0)
300$a | 300$a | 300AE; 300BE; RegReplace('(\\d*) p\\.', '\\1 pages')
#endif

#if (RegFind(@041, 'eng') < 0)
300$a | 300$a | 300AE; 300BE // Ei avata p.-lyhennettä jos kyseessä on esim. ranska
#endif

300$b | 300$b | 300BE
300$c | 300$c | S; Delete('.', At Ending)
300$e | 300$e | 300BE

// OLEMASSA OLEVIEN 336- JA 337-KENTTIEN KÄÄNTÄMINEN, $b- JA $2-OSAKENTTIEN LUOMINEN

336I1 | 336I1 | S
336I2 | 336I2 | S
336(ns)$a | 336(n)$a | Delete('.', At Ending); \
                       Delete(';', At Ending); \
                       If (InTable(S, '336_a_svenska.tbl')) Then Table ('336_a_svenska.tbl') Else Table ('336_a.tbl')

336$8 | 336$8 | S

#if Not (Exists(@336$b))
336(ns)$a | 336(no)$b | Delete('.', At Ending); Delete(';', At Ending); If (InTable(S, '336_b.tbl')) Then Table ('336_b.tbl')
336$a | 336(no)$2 | 'rdacontent'
#endif

#if (Exists(@336$b))
336$b | 336$b | S
336$a | 336(no)$2 | 'rdacontent'
#endif

336   | 336   | Sort('8ab2')

337I1 | 337I1 | S
337I2 | 337I2 | S
337$a | 337$a | If (InTable(S, '337_a_svenska.tbl')) Then Table ('337_a_svenska.tbl') Else Table ('337_a.tbl')

#if Not (Exists(@337$b))
337$a | 337$b | If (InTable(S, '337_b.tbl')) Then Table ('337_b.tbl')
337$a | 337$2 | 'rdamedia'
#endif

#if (Exists(@337$b))
337$b | 337$b | S
337$2 | 337$2 | S
#endif

337$8 | 337$8 | S

// LUODAAN 338-KENTÄT, JOS NIITÄ EI OLE TIETUEESSA VALMIINA

// 338-kenttiä voi olla useampia esim. moniviestimissä. Samanmuotoiset kentät luovat säännöt on ryhmitelty peräkkäin.
// Kahta samansisältöistä kenttää ei luoda missään tilanteessa.

// NIDE

#if (Not Exists(@338)) \
  And If ( @000/7/ = 'a' Or @000/7/ = 'c' Or @007/7/ = 'e' Or \
        (RegFind(@300$a, '[Kk]irja|[Kk]artasto') >= 0) Or (RegFind(%336$a, 'Kartografinen') >=0) ) \
  And If (Not Exists(@773)) \
  And If (RegFind(@337, 'laitetta') >= 0)
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'nide'
000 | 338(newest)$b | 'nc'
000 | 338(newest)$2 | 'rdacarrier'
#endif

#if (Not Exists(%338)) \
  And (Not Exists(@773)) \
  And (RegFind(%336$a, 'Teksti') >= 0) \
  And (RegFind(%337$a, 'laitetta') >= 0)
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'nide'
000 | 338(newest)$b | 'nc'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : VOLYM

#if (Not Exists(@338)) \
  And If ( @000/7/ = 'a' Or @000/7/ = 'c' Or @007/7/ = 'e' Or \
        (RegFind(@300$a, '[Bb]ok|artbok|atlas') >= 0) Or (RegFind(%336$a, 'artografisk') >=0) ) \
  And If (Not Exists(@773)) \
  And If (RegFind(@337, 'ingen medietyp|oförmedlad') >= 0)
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'volym'
000 | 338(newest)$b | 'nc'
000 | 338(newest)$2 | 'rdacarrier'
#endif

#if (Not Exists(%338)) \
  And (Not Exists(@773)) \
  And (RegFind(%336$a, 'ext') >= 0) \
  And (RegFind(%337$a, 'oförmedlad') >= 0)
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'volym'
000 | 338(newest)$b | 'nc'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VIDEOKASETTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]ideokase') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'videokasetti'
000 | 338(newest)$b | 'vf'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : VIDEOKASSETT

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Vv]ideokass') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'videokassett'
000 | 338(newest)$b | 'vf'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// PIIRTOHEITINKALVO

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]alvo') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'piirtoheitinkalvo'
000 | 338(newest)$b | 'gt'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : TRANSPARANG

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Tt]ranspara') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'transparang'
000 | 338(newest)$b | 'gt'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// DIA

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]uultokuv|[Dd]iaa') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'dia'
000 | 338(newest)$b | 'gs'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : DIABILD

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Dd]iabild') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'diabild'
000 | 338(newest)$b | 'gs'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MIKROKORTTI

#if (Not Exists(@338)) \
    And ( (RegFind(@300$a, '[Mm]ikrokortti') >= 0) Or (RegFind(@500$a, 'filmikortt') >= 0) Or (007/2/ = 'g') Or (007/2/ = 'e') ) \
    And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrokortti'
000 | 338(newest)$b | 'he'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : MIKROKORT

#if (Not Exists(@338)) \
    And If ( (RegFind(@300$a, '[Mm]ikrokort\\b') >= 0) Or (RegFind(@500$a, 'filmkort\\b') >= 0) Or (007/2/ = 'g') Or (007/2/ = 'e') ) \
    And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrokort'
000 | 338(newest)$b | 'he'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// KORTTI

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]ortti') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'kortti'
000 | 338(newest)$b | 'no'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : BILDKORT

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Kk]ort\\b') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'bildkort'
000 | 338(newest)$b | 'no'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ARKKI

#if (Not Exists(@338)) \
  And (Not Exists(@773)) \
  And ( (RegFind(@300$a, '[Aa]rkki') >= 0) Or \
        ( (RegFind(@336$a, 'kartograf') >= 0) And (RegFind(@337$a, 'laitetta') >= 0) ) )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'arkki'
000 | 338(newest)$b | 'nb'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : ARK

#if (Not Exists(@338)) \
  And (Not Exists(@773)) \
  And ( (RegFind(@300$a, '[Aa]rk\\b') >= 0) Or \
        ( (RegFind(@336$a, 'kartograf') >= 0) And (RegFind(@337$a, 'ingen medietyp') >= 0) ) )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'ark'
000 | 338(newest)$b | 'nb'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MIKROFILMIRULLA

#if (Not Exists(@338)) \
  And ( (RegFind(@300$a, '[Mm]ikrofilmi') >= 0) Or (007/2/ = 'j') ) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrofilmirulla'
000 | 338(newest)$b | 'hj'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : MIKROFILMSRULLE

#if (Not Exists(@338)) \
  And ( (RegFind(@300$a, '[Mm]ikrofilm\\b') >= 0) Or (007/2/ = 'j') ) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'mikrofilmsrulle'
000 | 338(newest)$b | 'hj'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// ÄÄNIKELA

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ää]änikela') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'äänikela'
000 | 338(newest)$b | 'st'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : LJUDSPOLE

#if (Not Exists(@338)) And If (RegFind(@300$a, '[Ll]judsp') >= 0) And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'ljudspole'
000 | 338(newest)$b | 'st'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MUU

#if (Not Exists(@338)) \
  And If (RegFind(@300$a, '[Tt]aulu|[Uu][Ss][Bb]-muisti|[Oo]ptinen levy|[Ll]evyke|[Dd]isketti|[Oo]petuskuva') >= 0) \
  And Not (Exists(%338)) \
  And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'muu'
000 | 338(newest)$b | 'nz'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : ÖVRIG

#if (Not Exists(@338)) \
  And If (RegFind(@300$a, '[Tt]avla|[Uu][Ss][Bb]-minne|[Oo]ptisk|[Dd]iskett\\b') >= 0) \
  And Not (Exists(%338)) \
  And If (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'övrig'
000 | 338(newest)$b | 'nz'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// MÄÄRITTELEMÄTÖN

#if (Not Exists(@338)) \
  And (RegFind(@337$a, 'useita välittäviä laitteita') >= 0) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'määrittelemätön'
000 | 338(newest)$b | 'zu'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : ÖVRIG

#if (Not Exists(@338)) \
  And (RegFind(@337$a, 'ospecifierad') >= 0) \
  And (Not Exists(@773))
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'ospecifierad'
000 | 338(newest)$b | 'zu'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// VERKKOAINEISTO

#if (Not Exists(@338)) \
  And (RegFind(@300$a, 'ROM') < 0) \
  And If (Not Exists(@773)) \
  And (RegFind(@337, 'elektroninen') >= 0) \
  And ( \
  (RegFind(@300$a, '[Vv]erkkojulkaisu|[Tt]iedosto') >= 0) \
  Or (RegFind(@516$a, '[Vv]erkkoaineisto') >= 0) \
  Or (RegFind(@500, '[Ii]nternet-julkaisu') >= 0) \
  Or (RegFind(@538$a, '[Ii]nternet|[Ww][Ww][Ww]|selain|[Aa]dobe|[Vv]iewer') >= 0) \
  Or (RegFind(@256$a, '[Vv]erkkoaineisto') >= 0) \
  Or ( (RegFind(@300, '[Ii][Bb]ooks|[Ff][Ll][Aa][Cc]|[Hh][Tt][Mm][Ll]|online') >= 0) And (@008/24/ = 'o') ) \
  ) \
  Or ( (RegFind(000/8/, 's') >= 0) \
    Or (RegFind(@256, '[Vv]erkko|[Ss]uorakäyttöjärjestelmä') >= 0) \
    Or (RegFind(@020, '[Pp][Dd][Ff]') >= 0) )
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
000 | 338(newest)$a | 'verkkoaineisto'
000 | 338(newest)$b | 'cr'
000 | 338(newest)$2 | 'rdacarrier'
#endif

// SAMMA PÅ SVENSKA : WEBBMATERIAL

#if ((Not Exists(@338)) And (RegFind(%338$a, '[Vv]erkkoaineisto|[Ww]ebbmaterial') < 0)) \
   And If ( \
   (RegFind(@300$a, '[Ww]ebb|[Ff]il\\b') >= 0) \
   Or (RegFind(@516$a, '[Ww]ebb|WWW') >= 0) \
   Or (RegFind(@500, '[Ii]nternet-julkaisu') >= 0) \
   Or (RegFind(@538$a, '[Ii]nternet|[Ww][Ww][Ww]|selain|[Aa]dobe|[Vv]iewer') >= 0) \
   Or (RegFind(@256$a, '[Vv]erkkoaineisto') >= 0) \
   Or ( (RegFind(@300, '[Ii][Bb]ooks|[Ff][Ll][Aa][Cc]|[Hh][Tt][Mm][Ll]|online') >= 0) And (@008/24/ = 'o') ) \
   ) \
   And (Not Exists(@773)) \
   And (RegFind(@337, 'elektronisk') >= 0) \
   And (RegFind(@300$a, 'ROM') < 0)
000 | 338(new)I1 | ' '
000 | 338(newest)I2 | ' '
830I1 | 830I1  | S
830I2 | 830I2  | S
#endif

#if (RegFind(@830$a, 'Triot') >= 0)
830$m | <M83$m | TRIOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@830$a, 'Kvartetot') >= 0)
830$m | <M83$m | KVARTETOT; ESITYSKOKOONPANO
#endif

#if (RegFind(@830$a, 'Kvintetot') >= 0)
830$m | <M83$m | KVINTETOT; ESITYSKOKOONPANO
#endif

#if Not Exists(@830$a) Or ((RegFind(@830$a, 'Triot') >= 0) And (RegFind(@830$a, 'Kvartetot') >= 0) And (RegFind(@830$a, 'Kvintetot') >= 0))
830$m | <M83$m | S
#endif

830$o | <M83$o | SOVITUSMERKINTO, ESITYSKOKOONPANO
830$v | <M83$v | S; Delete ('.', At Ending)
830$? | <M83$? | S

M83 | 830 | RAAMATTU; \
            RegReplace('\\b;$v| ; $v', ' ;$v'); \
            If (NextSubIn(S, $v) = '') Then S + '.' Else S

856I1 | 856I1 | S
856I2 | 856I2 | S
856   | 856   | S; RegReplace('verkkojulkaisuun', 'verkkoaineistoon')

#if (TAG != 'DEL')
???I1           | ???I1           | S
???I2           | ???I2           | S
???             | ???             | S
#endif
